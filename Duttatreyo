{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "134d1bc0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.metrics import mean_squared_error\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn import preprocessing, svm\n",
    "import plotly.express as px\n",
    "from textblob import TextBlob\n",
    "from urllib.parse import urlparse,urlencode\n",
    "import ipaddress\n",
    "import re\n",
    "from scipy.stats import pearsonr\n",
    "import seaborn as sn\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import accuracy_score, confusion_matrix\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.tree import DecisionTreeClassifier \n",
    "from sklearn.ensemble import BaggingClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.neural_network import MLPClassifier\n",
    "from sklearn.model_selection import GridSearchCV"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f75a54d0",
   "metadata": {},
   "source": [
    "# Dataset overview"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "7678ea7b",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = pd.read_csv(\"phishing_and_benign_websites.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "c02fdcb0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URLs</th>\n",
       "      <th>Label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>http://www.wmmayhem.com/</td>\n",
       "      <td>Benign</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>http://www.ballymenaunitedyouthacademy.com/</td>\n",
       "      <td>Benign</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>http://www.brusselsgaybars.com/</td>\n",
       "      <td>Benign</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>http://www.sportsbettingtennis.net/</td>\n",
       "      <td>Benign</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>http://www.i29.mobi/</td>\n",
       "      <td>Benign</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          URLs   Label\n",
       "0                     http://www.wmmayhem.com/  Benign\n",
       "1  http://www.ballymenaunitedyouthacademy.com/  Benign\n",
       "2              http://www.brusselsgaybars.com/  Benign\n",
       "3          http://www.sportsbettingtennis.net/  Benign\n",
       "4                         http://www.i29.mobi/  Benign"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "c07384db",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 695538 entries, 0 to 695537\n",
      "Data columns (total 2 columns):\n",
      " #   Column  Non-Null Count   Dtype \n",
      "---  ------  --------------   ----- \n",
      " 0   URLs    695538 non-null  object\n",
      " 1   Label   695538 non-null  object\n",
      "dtypes: object(2)\n",
      "memory usage: 10.6+ MB\n"
     ]
    }
   ],
   "source": [
    "data.info() #table is having two columns: URLs and Label. both contains string."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "beb7e990",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(695538, 2)"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape #table is having 695538 rows"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "02541681",
   "metadata": {},
   "source": [
    "# Pre-processing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "dee180f2",
   "metadata": {},
   "outputs": [],
   "source": [
    "#address based features\n",
    "# number of dots in url\n",
    "def getDots(url):\n",
    "    pos = url.count('.')\n",
    "    if(pos < 0):\n",
    "        return 0\n",
    "    else:\n",
    "        return pos\n",
    "# number of hyphen in url\n",
    "def getHyphen(url):\n",
    "    pos = url.count('-')\n",
    "    if(pos < 0):\n",
    "        return 0\n",
    "    else:\n",
    "        return pos\n",
    "# URL Domain \n",
    "def getDomain(url):  \n",
    "    domain = urlparse(url).netloc\n",
    "    if re.match(r\"^www.\",domain):\n",
    "        domain = domain.replace(\"www.\",\"\")\n",
    "    return domain\n",
    "\n",
    "# @ in URL\n",
    "def AtSign(url):\n",
    "    if \"@\" in url:\n",
    "        have = 1    \n",
    "    else:\n",
    "        have = 0    \n",
    "    return have\n",
    "\n",
    " # Length of URL\n",
    "def getLength(url):\n",
    "    return len(url)\n",
    "\n",
    "# Number of  / in URL\n",
    "def getDepth(url):\n",
    "    return url.count('/')\n",
    "\n",
    "#Checking // in URL\n",
    "def redirection(url):\n",
    "    return url.count('//')\n",
    "\n",
    "# HTTPS in domain\n",
    "def httpDomain(url):\n",
    "    domain = urlparse(url).netloc\n",
    "    if 'https' in domain:\n",
    "        return 1\n",
    "    else:\n",
    "        return 0\n",
    "\n",
    "# shortening\n",
    "shortening_links = \"goo.gl|t.co|twit.ac|tiny.cc|snipurl.com|post.ly|kl.am|wp.me|db.tt|adf.ly|bitly.com|tinyurl.com|bit.ly|is.gd|po.st|bc.vc|u.to|j.mp|cutt.us|v.gd|tr.im|link.zip.net|shorte.st|x.co|ow.ly|url4.eu|ping.fm|just.as|bkite.com|snipr.com|fic.kr|loopt.us|doiop.com|short.ie|rubyurl.com|om.ly|to.ly|bit.do|lnkd.in|qr.ae|q.gs|cur.lv|ity.im|u.bb|yourls.org|prettylinkpro.com|scrnch.me|filoops.info|vzturl.com|qr.net|1url.com|tweez.me\"\n",
    "\n",
    "\n",
    "# TinyURL\n",
    "def short(url):\n",
    "    there=re.search(shortening_links,url)\n",
    "    if there:\n",
    "        return 1\n",
    "    else:\n",
    "        return 0\n",
    "    \n",
    "# ps in URL\n",
    "def ps(url):\n",
    "    if '-' in urlparse(url).netloc:\n",
    "        return 1            \n",
    "    else:\n",
    "        return 0            \n",
    "# Length of domain\n",
    "def domainLength(url):\n",
    "    domainL = urlparse(url).netloc\n",
    "    return len(domainL)\n",
    "\n",
    "# Number of subdomains (Subdomains)\n",
    "def subdomains(url):\n",
    "    domain = urlparse(url).netloc\n",
    "    subdomains = domain.split('.')\n",
    "    return len(subdomains)-2 if len(subdomains)>2 else len(subdomains)\n",
    "\n",
    "# Number of queries in the URL (Queries)\n",
    "def queries(url):\n",
    "    return len(urlparse(url).query)\n",
    "\n",
    "# IP in URL\n",
    "def ipA(url):\n",
    "    ip = urlparse(url).netloc\n",
    "    match = re.search(r'^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$', ip)\n",
    "    return 1 if match else 0\n",
    "\n",
    "# Existence of 'https' in the URL path (HTTPS)\n",
    "def https(url):\n",
    "    return 1 if 'https' in urlparse(url).path else 0\n",
    "\n",
    "# Existence of suspicious top level domain (TLD)\n",
    "def suspiciousTLD(url):\n",
    "    tld = urlparse(url).netloc.split('.')[-1]\n",
    "    return 1 if tld in ['zip', 'cricket', 'link', 'work', 'party', 'gq', 'kim', 'country', 'science', 'tk'] else 0\n",
    "\n",
    "# Existence of port number in the URL (Port)\n",
    "def portNumber(url):\n",
    "    return 1 if bool(urlparse(url).port) else 0\n",
    "\n",
    "# Existence of 'double slash' in the URL path (Double Slash)\n",
    "def doubleSlash(url):\n",
    "    return 1 if '//' in urlparse(url).path else 0\n",
    "\n",
    "# Existence of 'www' in the URL subdomain (WWW)\n",
    "def www(url):\n",
    "    return 1 if 'www' in urlparse(url).netloc.split('.')[:-2] else 0\n",
    "\n",
    "# Ratio of digits in the URL (Digit Ratio)\n",
    "def digitRatio(url):\n",
    "    digits = sum(c.isdigit() for c in url)\n",
    "    return digits/len(url) if len(url)>0 else 0\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "11ea2fc3",
   "metadata": {},
   "source": [
    "# Features Extraction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "da0cd8aa",
   "metadata": {},
   "outputs": [],
   "source": [
    "def featureExtraction(url,label):\n",
    "    features = []\n",
    "    features.append(url)\n",
    "    features.append(getDots(url))\n",
    "    features.append(getHyphen(url))\n",
    "    features.append(getDomain(url))\n",
    "    features.append(AtSign(url))\n",
    "    features.append(getLength(url))\n",
    "    features.append(getDepth(url))\n",
    "    features.append(redirection(url))\n",
    "    features.append(httpDomain(url))\n",
    "    features.append(short(url))\n",
    "    features.append(ps(url))\n",
    "    features.append(domainLength(url))\n",
    "    features.append(subdomains(url))\n",
    "    features.append(queries(url))\n",
    "    features.append(ipA(url))\n",
    "    features.append(https(url))\n",
    "    features.append(suspiciousTLD(url))\n",
    "    features.append(portNumber(url))\n",
    "    features.append(doubleSlash(url))\n",
    "    features.append(www(url))\n",
    "    features.append(digitRatio(url))\n",
    "    features.append(label)\n",
    "    return features\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "8edd9bc4",
   "metadata": {},
   "outputs": [],
   "source": [
    "features_created = []\n",
    "label = 0\n",
    "\n",
    "for i in range(0, 695538):\n",
    "    url = data['URLs'][i]\n",
    "    label = data['Label'][i]\n",
    "\n",
    "    features_created.append(featureExtraction(url,label))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "201d4b8d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URLs</th>\n",
       "      <th>Number_of_Dots</th>\n",
       "      <th>Number_of_Hyphen</th>\n",
       "      <th>Domain_Name</th>\n",
       "      <th>Have_@</th>\n",
       "      <th>Length_URL</th>\n",
       "      <th>Depth_URL</th>\n",
       "      <th>Re_direction</th>\n",
       "      <th>https_in_Domain</th>\n",
       "      <th>Tiny_URL</th>\n",
       "      <th>...</th>\n",
       "      <th>Number_of_subdomains</th>\n",
       "      <th>Number_of_queries</th>\n",
       "      <th>Existence_of_IP_address</th>\n",
       "      <th>Existence_of_https_in_URL_path</th>\n",
       "      <th>Existence_of_suspicious_TLD</th>\n",
       "      <th>Existence_of_port_number</th>\n",
       "      <th>Existence_of_double_slash</th>\n",
       "      <th>Existence_of_www_in_URL_subdomain</th>\n",
       "      <th>Ratio_of_digits</th>\n",
       "      <th>Label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>http://www.wmmayhem.com/</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>wmmayhem.com</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Benign</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>http://www.ballymenaunitedyouthacademy.com/</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>ballymenaunitedyouthacademy.com</td>\n",
       "      <td>0</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Benign</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>http://www.brusselsgaybars.com/</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>brusselsgaybars.com</td>\n",
       "      <td>0</td>\n",
       "      <td>31</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Benign</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>http://www.sportsbettingtennis.net/</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>sportsbettingtennis.net</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Benign</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>http://www.i29.mobi/</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>i29.mobi</td>\n",
       "      <td>0</td>\n",
       "      <td>20</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Benign</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          URLs  Number_of_Dots  \\\n",
       "0                     http://www.wmmayhem.com/               2   \n",
       "1  http://www.ballymenaunitedyouthacademy.com/               2   \n",
       "2              http://www.brusselsgaybars.com/               2   \n",
       "3          http://www.sportsbettingtennis.net/               2   \n",
       "4                         http://www.i29.mobi/               2   \n",
       "\n",
       "   Number_of_Hyphen                      Domain_Name  Have_@  Length_URL  \\\n",
       "0                 0                     wmmayhem.com       0          24   \n",
       "1                 0  ballymenaunitedyouthacademy.com       0          43   \n",
       "2                 0              brusselsgaybars.com       0          31   \n",
       "3                 0          sportsbettingtennis.net       0          35   \n",
       "4                 0                         i29.mobi       0          20   \n",
       "\n",
       "   Depth_URL  Re_direction  https_in_Domain  Tiny_URL  ...  \\\n",
       "0          3             1                0         0  ...   \n",
       "1          3             1                0         0  ...   \n",
       "2          3             1                0         0  ...   \n",
       "3          3             1                0         0  ...   \n",
       "4          3             1                0         0  ...   \n",
       "\n",
       "   Number_of_subdomains  Number_of_queries  Existence_of_IP_address  \\\n",
       "0                     1                  0                        0   \n",
       "1                     1                  0                        0   \n",
       "2                     1                  0                        0   \n",
       "3                     1                  0                        0   \n",
       "4                     1                  0                        0   \n",
       "\n",
       "   Existence_of_https_in_URL_path  Existence_of_suspicious_TLD  \\\n",
       "0                               0                            0   \n",
       "1                               0                            0   \n",
       "2                               0                            0   \n",
       "3                               0                            0   \n",
       "4                               0                            0   \n",
       "\n",
       "   Existence_of_port_number  Existence_of_double_slash  \\\n",
       "0                         0                          0   \n",
       "1                         0                          0   \n",
       "2                         0                          0   \n",
       "3                         0                          0   \n",
       "4                         0                          0   \n",
       "\n",
       "   Existence_of_www_in_URL_subdomain  Ratio_of_digits   Label  \n",
       "0                                  1              0.0  Benign  \n",
       "1                                  1              0.0  Benign  \n",
       "2                                  1              0.0  Benign  \n",
       "3                                  1              0.0  Benign  \n",
       "4                                  1              0.1  Benign  \n",
       "\n",
       "[5 rows x 22 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feature_names = ['URLs', 'Number_of_Dots', 'Number_of_Hyphen', 'Domain_Name', 'Have_@', 'Length_URL', 'Depth_URL','Re_direction', 'https_in_Domain', 'Tiny_URL', 'Prefix_Suffix', 'Length_of_domain', 'Number_of_subdomains', 'Number_of_queries', 'Existence_of_IP_address', 'Existence_of_https_in_URL_path', 'Existence_of_suspicious_TLD', 'Existence_of_port_number', 'Existence_of_double_slash', 'Existence_of_www_in_URL_subdomain', 'Ratio_of_digits', 'Label']\n",
    "\n",
    "created_data = pd.DataFrame(features_created, columns= feature_names)\n",
    "created_data.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "2d26b588",
   "metadata": {},
   "outputs": [],
   "source": [
    "#converted phising to 1 and benign to 0\n",
    "# Add a new column named 'Label_bool'\n",
    "created_data['Label_bool'] = [1 if x =='Phishing' else 0 for x in created_data['Label']]\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f21c2193",
   "metadata": {},
   "source": [
    "# Quantitative analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "470e6368",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean for number of dots is: 2.32\n",
      "Mean for number of hyphen is: 1.07\n",
      "Mean for url length is: 54.76\n"
     ]
    }
   ],
   "source": [
    "#mean of Number of Dots\n",
    "print(\"Mean for number of dots is:\" , round(created_data['Number_of_Dots'].mean(), 2))\n",
    "\n",
    "#mean of Number of hyphen\n",
    "print(\"Mean for number of hyphen is:\" , round(created_data['Number_of_Hyphen'].mean(), 2))\n",
    "\n",
    "#mean of url length\n",
    "print(\"Mean for url length is:\" , round(created_data['Length_URL'].mean(), 2))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "33d98920",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Median for number of dots is: 2.0\n",
      "Median for number of hyphen is: 0.0\n",
      "Median for url length is: 42.0\n"
     ]
    }
   ],
   "source": [
    "#median of Number of Dots\n",
    "print(\"Median for number of dots is:\" , created_data['Number_of_Dots'].median())\n",
    "#median of Number of hyphen\n",
    "print(\"Median for number of hyphen is:\" , created_data['Number_of_Hyphen'].median())\n",
    "#median of url length\n",
    "print(\"Median for url length is:\" , created_data['Length_URL'].median())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "cc0cc0e2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mode for number of dots is: 2\n",
      "Mode for number of hyphen is: 0\n",
      "Mode for URL length is: 31\n"
     ]
    }
   ],
   "source": [
    "# Mode of Number of Dots\n",
    "print(\"Mode for number of dots is:\", str(created_data['Number_of_Dots'].mode()[0]))\n",
    "\n",
    "# Mode of Number of Hyphen\n",
    "print(\"Mode for number of hyphen is:\", str(created_data['Number_of_Hyphen'].mode()[0]))\n",
    "\n",
    "# Mode of URL length\n",
    "print(\"Mode for URL length is:\", str(created_data['Length_URL'].mode()[0]))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "25664a44",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Standard deviation for number of dots is: 1.75\n",
      "Standard deviation for number of hyphen is: 2.32\n",
      "Standard deviation for url length is: 50.47\n"
     ]
    }
   ],
   "source": [
    "#standard deviation of Number of Dots\n",
    "print(\"Standard deviation for number of dots is:\" , round(created_data['Number_of_Dots'].std(), 2))\n",
    "#standard deviation of Number of hyphen\n",
    "print(\"Standard deviation for number of hyphen is:\" , round(created_data['Number_of_Hyphen'].std(), 2))\n",
    "#standard deviation of url length\n",
    "print(\"Standard deviation for url length is:\" , round(created_data['Length_URL'].std(), 2))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "fbcf858f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inter Quartile Range for Number of Dots:  2.0\n"
     ]
    }
   ],
   "source": [
    "data = created_data['Number_of_Dots']\n",
    "IQ1 = np.percentile(data, 25)\n",
    "IQ3 = np.percentile(data, 75)\n",
    "IQRange = IQ3 - IQ1\n",
    "  \n",
    "print(\"Inter Quartile Range for Number of Dots: \" , IQRange)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "9af28649",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inter Quartile Range for Number of Hyphen:  1.0\n"
     ]
    }
   ],
   "source": [
    "data = created_data['Number_of_Hyphen']\n",
    "IQ1 = np.percentile(data, 25)\n",
    "IQ3 = np.percentile(data, 75)\n",
    "IQRange = IQ3 - IQ1\n",
    "  \n",
    "print(\"Inter Quartile Range for Number of Hyphen: \" , IQRange)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "4b54fe7c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inter Quartile Range for Url Length:  33.0\n"
     ]
    }
   ],
   "source": [
    "data = created_data['Length_URL']\n",
    "IQ1 = np.percentile(data, 25)\n",
    "IQ3 = np.percentile(data, 75)\n",
    "IQRange = IQ3 - IQ1\n",
    "  \n",
    "print(\"Inter Quartile Range for Url Length: \" , IQRange)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "9b74a09f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearson correlation between Url Length and likelihood of phishing: 0.254\n"
     ]
    }
   ],
   "source": [
    "list1 = created_data['Length_URL']\n",
    "list2 = created_data['Label_bool']\n",
    " \n",
    "# Apply the pearsonr()\n",
    "corr, _ = pearsonr(list1, list2)\n",
    "print('Pearson correlation between Url Length and likelihood of phishing: %.3f' % corr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "f07002ba",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearson correlation between number of dots and likelihood of phishing: 0.323\n"
     ]
    }
   ],
   "source": [
    "list1 = created_data['Number_of_Dots']\n",
    "list2 = created_data['Label_bool']\n",
    " \n",
    "# Apply the pearsonr()\n",
    "corr, _ = pearsonr(list1, list2)\n",
    "print('Pearson correlation between number of dots and likelihood of phishing: %.3f' %  corr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "cc2b00ca",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearson correlation between number of hyphens and likelihood of phishing:-0.098\n"
     ]
    }
   ],
   "source": [
    "list1 = created_data['Number_of_Hyphen']\n",
    "list2 = created_data['Label_bool']\n",
    " \n",
    "# Apply the pearsonr()\n",
    "corr, _ = pearsonr(list1, list2)\n",
    "print('Pearson correlation between number of hyphens and likelihood of phishing:%.3f' %corr)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0605143f",
   "metadata": {},
   "source": [
    "# Data-Visualization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "a89f6610",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 640x480 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#scatter plot to show the relation between number of dots and number of hyphen with url length\n",
    "created_data.plot(kind = 'scatter', x = 'Number_of_Dots', y = 'Length_URL', color='red')\n",
    "plt.ylabel('Length of URL')\n",
    "plt.xlabel('Number of Dots')\n",
    "created_data.plot(kind = 'scatter', x = 'Number_of_Hyphen', y = 'Length_URL', color= 'green')\n",
    "plt.ylabel('Length of URL')\n",
    "plt.xlabel('Number of Hyphens')\n",
    "plt.show()\n",
    "fig=plt.gcf()\n",
    "fig.tight_layout()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "0e4fb108",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Length of URL')"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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gGXEFQAAy4grAACWEVcAACwjrgAAWEZcAQCwjLgCAGAZcQUAwDLiCgCAZXUa14ULF2rAgAFq1aqVIiIiNGbMGOXk5PiMKS0t1dSpU9W2bVu1bNlSN954owoLC33G5ObmauTIkQoNDVVERIRmz56tyspKnzGbN29Wv3795HQ6FRcXp+Tk5No+PQBAE1Wncd2yZYumTp2qTz75RCkpKaqoqNDQoUN17Ngx75gHHnhA//M//6P33ntPW7Zs0XfffaexY8d6t588eVIjR45UeXm5Pv74Y61YsULJycl6+OGHvWMOHDigkSNHavDgwcrKytL06dN11113af369Rf0fAEATYSpR4qKiowks2XLFmOMMcXFxaZZs2bmvffe847Zs2ePkWQyMjKMMcb87//+rwkICDAFBQXeMS+99JJxuVymrKzMGGPMgw8+aC699FKfY918880mKSnJr3m53W4jybjd7vM6PwBo0qS6XSzwtwf16jNXt9stSWrTpo0kKTMzUxUVFUpMTPSO6d69uzp16qSMjAxJUkZGhnr37q3IyEjvmKSkJHk8HmVnZ3vH/HQfp8ac2sfPlZWVyePx+CwAAPir3sS1qqpK06dP19VXX61evXpJkgoKChQcHKzw8HCfsZGRkSooKPCO+WlYT20/te1sYzwej06cOFFtLgsXLlRYWJh3iYmJsXKOAICmod7EderUqdq9e7feeeedup6K5s6dK7fb7V3y8vLqekoAgAYkqK4nIEnTpk3T2rVrlZaWpo4dO3rXR0VFqby8XMXFxT7vXgsLCxUVFeUd8+mnn/rs79TdxD8d8/M7jAsLC+VyuRQSElJtPk6nU06n08q5AQCanjp952qM0bRp07R69Wpt3LhRnTt39tnev39/NWvWTKmpqd51OTk5ys3NVUJCgiQpISFBn3/+uYqKirxjUlJS5HK51LNnT++Yn+7j1JhT+wAAwCort0+doylTppiwsDCzefNmk5+f712OHz/uHXPPPfeYTp06mY0bN5rt27ebhIQEk5CQ4N1eWVlpevXqZYYOHWqysrLMunXrTPv27c3cuXO9Y77++msTGhpqZs+ebfbs2WNeeOEFExgYaNatW+fXPLlbGAAsaEJ3C9dpXCWddlm+fLl3zIkTJ8wf/vAH07p1axMaGmpuuOEGk5+f77OfgwcPmuHDh5uQkBDTrl07M3PmTFNR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9913m4KCAp99HD582IwbN860bNnSuFwuc8cdd5ijR4/6jNm5c6cZOHCgcTqd5qKLLjJPPvlkjeZJXAHAgiYU1xrf0BQTE6PU1FTFxcX5rN+wYUONb/q59tprZYw54/b169f/4j7atGnzi5ej+/Tpww+5AwAumBrHdebMmbrvvvuUlZWlX//615Kk9PR0JScna+nSpdYnCABAQ1PjuE6ZMkVRUVF6+umntXLlSklSjx499O6772r06NHWJwgAQEPjMGe7LgtJP/6da1hYmNxuN3+WAwDnyuGo2+NbyJ2/PeAn5wAAsIy4AgBgGXEFAMAy4goAgGXEFQAAy2r8pzgnT55UcnKyUlNTVVRUpKqqKp/tGzdutDY5AAAaohrH9f7771dycrJGjhypXr16yVHXt1YDAFDP1Diu77zzjlauXKkRI0bUxnwAAGjwavyZa3BwcLXvFQYAAP9S47jOnDlTS5cuPesX7gMA0JT5dVl47NixPo83btyoDz74QJdeeqmaNWvms23VqlX2ZgcAQAPkV1zDwsJ8Ht9www21MhkAABoDv+K6fPny2p4HAACNRo0/c73uuutUXFxcbb3H49F1111nY04AADRoNY7r5s2bVV5eXm19aWmptm7damVSAAA0ZH7/neuuXbu8//7iiy9UUFDgfXzy5EmtW7dOF110kd3ZAQDQAPkd1759+8rhcMjhcJz28m9ISIief/55q5MDAKAh8juuBw4ckDFGXbp00aeffqr27dt7twUHBysiIkKBgYG1MkkAABoSv+MaGxsrSdW+qB8AAPiq8XcLv//++6dd73A41Lx5c8XFxalz587nPTEAABqqGsd1zJgxcjgc1b7+8NQ6h8OhgQMHas2aNWrdurW1iQIA0FDU+E9xUlJSNGDAAKWkpMjtdsvtdislJUXx8fFau3at0tLSdPjwYc2aNas25gsAQL13Tr/n+vLLL+vXv/61d92QIUPUvHlzTZ48WdnZ2Xr22Wd15513Wp0oAAANRY3fue7fv18ul6vaepfLpa+//lqS1LVrV33//ffnPzsAABqgGse1f//+mj17tg4dOuRdd+jQIT344IMaMGCAJGnv3r2KiYmxN0sAABqQGl8Wfu211zR69Gh17NjRG9C8vDx16dJFf//73yVJJSUlmjdvnt2ZAgDQQDjMOfzqeVVVlT788EN99dVXkqRu3brp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z7Rt29b7ePny5UaS+eSTT7zr9uzZYySZbdu2GWOMGTJkiHniiSd89vPGG2+Y6Oho72NJZvXq1ed+EkADwXcLA9CGDRu0cOFCffnll/J4PKqsrFRpaamOHz+u0NBQSVJQUJAGDBjgfU737t0VHh6uPXv26Morr9TOnTuVnp7u80715MmT1fYDNAXEFWjiDh48qOuvv15TpkzR448/rjZt2uijjz7SpEmTVF5e7ncUS0pKtGDBAo0dO7baNn5TGE0NcQWauMzMTFVVVenpp59WQMCPt2GsXLmy2rjKykpt375dV155pSQpJydHxcXF6tGjhySpX79+ysnJUVxc3IWbPFBPEVegCXG73crKyvJZ165dO1VUVOj555/XqFGjlJ6ermXLllV7brNmzXTvvffqueeeU1BQkKZNm6arrrrKG9uHH35Y119/vTp16qTf/va3CggI0M6dO7V792499thjF+L0gHqDu4WBJmTz5s26/PLLfZY33nhDS5Ys0X/913+pV69eeuutt7Rw4cJqzw0NDdWcOXN066236uqrr1bLli317rvvercnJSVp7dq1+vDDDzVgwABdddVVeuaZZxQbG3shTxGoF/g9VwAALOOdKwAAlhFXAAAsI64AAFhGXAEAsIy4AgBgGXEFAMAy4goAgGXEFQAAy4grAACWEVcAACwjrgAAWEZcAQCw7P8BjNfj95ZwNlIAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# bar graph\n",
    "Label = created_data['Label']\n",
    "Url_length = created_data['Length_URL']\n",
    "  \n",
    "fig = plt.figure(figsize = (5, 5))\n",
    " \n",
    "# creating the bar plot\n",
    "plt.bar(Label, Url_length, color ='red', width = 0.1)\n",
    "plt.xlabel(\"Label\")\n",
    "plt.ylabel(\"Length of URL\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "ac849742",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Length of URL')"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# box plot between URL length and label\n",
    "# Removing outliers\n",
    "data_outlier_removed = created_data[created_data[\"Length_URL\"]<=300]\n",
    "sn.boxplot(x=\"Label\", y=\"Length_URL\", data=data_outlier_removed)\n",
    "plt.ylabel('Length of URL')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "a1a3f860",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Length of URL')"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# histogram for URL length\n",
    "created_data[\"Length_URL\"].plot(kind = 'hist', bins=[50,100,150,200,250,300,350,400,450,500,550,600], edgecolor=\"red\")\n",
    "plt.xlabel(\"Length of URL\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "605f8990",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Length of URL')"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#pie chart\n",
    "created_data.groupby(['Label']).sum(numeric_only=True).plot(kind='pie', y='Length_URL', autopct='%1.0f%%')\n",
    "plt.ylabel('Length of URL')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "2c034096",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 700x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# List of features\n",
    "feature_cols = ['Number_of_Dots', 'Number_of_Hyphen', 'Ratio_of_digits' , 'Length_of_domain', 'Number_of_subdomains',  'Existence_of_www_in_URL_subdomain'  , 'Depth_URL']\n",
    "# Groupby label and sum the features\n",
    "feature_sum = created_data.groupby(['Label'])[feature_cols].sum(numeric_only=True)\n",
    "\n",
    "# Add missing features with a value of 0\n",
    "missing_features = set(feature_cols) - set(feature_sum.columns)\n",
    "for feature in missing_features:\n",
    "    feature_sum[feature] = 0\n",
    "\n",
    "# Create pie chart for phishing URLs\n",
    "plt.figure(figsize=(7, 8))\n",
    "plt.pie(feature_sum.loc['Phishing'].values, labels=feature_cols, autopct='%1.0f%%')\n",
    "plt.title(\"Features used in Phishing URLs\")\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "15ddb968",
   "metadata": {},
   "source": [
    "# Train-test split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "52b3d70e",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = created_data.drop(['URLs', 'Domain_Name', 'Label', 'Label_bool'], axis = 1)\n",
    "y = created_data['Label_bool']\n",
    "\n",
    "# split the train and test dataset\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20,\n",
    "                                                    random_state=23)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f432dd8b",
   "metadata": {},
   "source": [
    "# Logistic regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "86b7b1d7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Logistic Regression model accuracy (in %): 75.44713460045432\n"
     ]
    }
   ],
   "source": [
    "# LogisticRegression\n",
    "clf = LogisticRegression(random_state=0, max_iter=2000)\n",
    "clf.fit(X_train, y_train)\n",
    "# Prediction\n",
    "y_pred = clf.predict(X_test)\n",
    "  \n",
    "acc = accuracy_score(y_test, y_pred)\n",
    "print(\"Logistic Regression model accuracy (in %):\", acc*100)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f154795",
   "metadata": {},
   "source": [
    "#  Decision tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "abe5afec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Decision tree model accuracy (in %): 85.42068033470397\n"
     ]
    }
   ],
   "source": [
    "decision_tree_classifier= DecisionTreeClassifier(criterion='entropy', random_state=0)  \n",
    "decision_tree_classifier.fit(X_train, y_train)  \n",
    "y_pred= decision_tree_classifier.predict(X_test)  \n",
    "acc = accuracy_score(y_test, y_pred)\n",
    "print(\"Decision tree model accuracy (in %):\", acc*100)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "70558f27",
   "metadata": {},
   "source": [
    "# Decision tree with Bagging classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "05461caa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bagging + Decision tree model accuracy (in %): 85.73841907007504\n"
     ]
    }
   ],
   "source": [
    "# Create a decision tree classifier with the desired hyperparameters\n",
    "decision_tree_classifier_with_bagging = DecisionTreeClassifier(criterion='entropy', random_state=0)\n",
    "\n",
    "# Create a BaggingClassifier with the decision tree classifier as the base estimator\n",
    "bagging_classifier_decision_tree = BaggingClassifier(estimator=decision_tree_classifier_with_bagging, n_estimators=10, random_state=0)\n",
    "\n",
    "# Fit the BaggingClassifier on the training set\n",
    "bagging_classifier_decision_tree.fit(X_train, y_train)\n",
    "\n",
    "# Make predictions on the test set using the BaggingClassifier\n",
    "y_pred = bagging_classifier_decision_tree.predict(X_test)\n",
    "\n",
    "# Evaluate the accuracy of the BaggingClassifier\n",
    "acc = accuracy_score(y_test, y_pred)\n",
    "print(\"Bagging + Decision tree model accuracy (in %):\", acc*100)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6aa42085",
   "metadata": {},
   "source": [
    "# Random Forest "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "68cb7b18",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Random forest model accuracy (in %): 86.1122293469822\n"
     ]
    }
   ],
   "source": [
    "# Create a random forest classifier with the desired hyperparameters\n",
    "random_forest_classifier = RandomForestClassifier(n_estimators=100, criterion='gini', random_state=0)\n",
    "\n",
    "# Fit the random forest classifier on the training set\n",
    "random_forest_classifier.fit(X_train, y_train)\n",
    "\n",
    "# Make predictions on the test set using the random forest classifier\n",
    "y_pred = random_forest_classifier.predict(X_test)\n",
    "\n",
    "# Evaluate the accuracy of the random forest classifier\n",
    "acc = accuracy_score(y_test, y_pred)\n",
    "print(\"Random forest model accuracy (in %):\", acc*100)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "525c4803",
   "metadata": {},
   "source": [
    "# Random forest with Bagging Classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "0d43ebd4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bagging + Random forest model accuracy (in %): 85.91382235385456\n"
     ]
    }
   ],
   "source": [
    "# Create a random forest classifier with the desired hyperparameters\n",
    "random_forest_classifier_with_bagging = RandomForestClassifier(n_estimators=19, criterion='entropy', random_state=0)\n",
    "\n",
    "# Create a BaggingClassifier with the random forest classifier as the base estimator\n",
    "bagging_classifier_random_forest = BaggingClassifier(estimator=random_forest_classifier_with_bagging, n_estimators=10, random_state=0)\n",
    "\n",
    "# Fit the BaggingClassifier on the training set\n",
    "bagging_classifier_random_forest.fit(X_train, y_train)\n",
    "\n",
    "# Make predictions on the test set using the BaggingClassifier\n",
    "y_pred = bagging_classifier_random_forest.predict(X_test)\n",
    "\n",
    "# Evaluate the accuracy of the BaggingClassifier\n",
    "acc = accuracy_score(y_test, y_pred)\n",
    "print(\"Bagging + Random forest model accuracy (in %):\", acc*100)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "02da6192",
   "metadata": {},
   "source": [
    "# MLP(Multi-layered Perceptron) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "27c06c47",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define the MLPClassifier\n",
    "mlp = MLPClassifier()\n",
    "\n",
    "# Define the hyperparameter grid\n",
    "param_grid = {\n",
    "    'hidden_layer_sizes': [(10,), (50,), (100,)],\n",
    "    'activation': ['relu', 'tanh'],\n",
    "    'solver': ['sgd', 'adam'],\n",
    "    'alpha': [0.0001, 0.001, 0.01],\n",
    "    'max_iter': [1000, 5000],\n",
    "}\n",
    "\n",
    "# Perform Grid Search to find the best combination of hyperparameters\n",
    "grid = GridSearchCV(mlp, param_grid, cv=5, n_jobs=-1)\n",
    "grid.fit(X_train, y_train)\n",
    "\n",
    "# Print the best hyperparameters\n",
    "print(\"Best Hyperparameters:\", grid.best_params_)\n",
    "\n",
    "# Predict the labels of test data using the best estimator\n",
    "mlp_classifier = grid.best_estimator_\n",
    "y_pred = mlp_classifier.predict(X_test)\n",
    "\n",
    "# Calculate accuracy score and confusion matrix\n",
    "accuracy = accuracy_score(y_test, y_pred)\n",
    "\n",
    "print(\"Accuracy: \", accuracy *100)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "664a5d74",
   "metadata": {},
   "source": [
    "# Phishing Predictor Function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "6e045b92",
   "metadata": {},
   "outputs": [],
   "source": [
    "def Phishing_Predictor(url_input, clf, decision_tree_classifier, random_forest_classifier, mlp_classifier , bagging_classifier_decision_tree, bagging_classifier_random_forest):\n",
    "    features_created = []\n",
    "    label = 0\n",
    "    url = url_input.strip()\n",
    "    features_created.append(featureExtraction(url,label))\n",
    "    feature_names = ['URLs', 'Number_of_Dots', 'Number_of_Hyphen', 'Domain_Name', 'Have_@', 'Length_URL', 'Depth_URL','Re_direction', 'https_in_Domain', 'Tiny_URL', 'Prefix_Suffix', 'Length_of_domain', 'Number_of_subdomains', 'Number_of_queries', 'Existence_of_IP_address', 'Existence_of_https_in_URL_path', 'Existence_of_suspicious_TLD', 'Existence_of_port_number', 'Existence_of_double_slash', 'Existence_of_www_in_URL_subdomain', 'Ratio_of_digits', 'Label']\n",
    "\n",
    "    created_data = pd.DataFrame(features_created, columns=feature_names)\n",
    "    X = created_data.drop(['URLs', 'Domain_Name', 'Label'], axis=1)\n",
    "\n",
    "    # Predict using logistic regression model\n",
    "    lr_pred = clf.predict(X)\n",
    "    # Predict using decision tree model\n",
    "    dt_pred = decision_tree_classifier.predict(X)\n",
    "    # Predict using decision tree with bagging\n",
    "    bdt_pred = bagging_classifier_decision_tree.predict(X)\n",
    "    # Predict using MLP model\n",
    "    mlp_pred = mlp_classifier.predict(X_test)\n",
    "    #predict usning Random Forest with bagging\n",
    "    brf_pred= bagging_classifier_random_forest.predict(X)\n",
    "    # Predict using Random Forest Classifier\n",
    "    rf_pred =  random_forest_classifier.predict(X)\n",
    "\n",
    "    # Combine predictions using majority voting\n",
    "    final_pred = int((lr_pred + dt_pred + rf_pred+ mlp_pred + brf_pred + bdt_pred) >= 3)\n",
    "\n",
    "    if final_pred == 0:\n",
    "        print(\"Legitimate URL\")\n",
    "    else:\n",
    "        print(\"Phishing URL\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "a284d2d6",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Legitimate URL\n"
     ]
    }
   ],
   "source": [
    "Phishing_Predictor(\"https://www.google.com/\",  clf, decision_tree_classifier, random_forest_classifier, mlp_classifier ,bagging_classifier_decision_tree, bagging_classifier_random_forest)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1ee50857",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
